#!/bin/bash
echo -n "Please enter the number of virtual machines: "
read numbOfVMs

set -x

#get start time
start=$(date +%s)

########## Start of variable Definition ##############

#define a subscription
subscription=c42c6aa8-3c10-40e5-a3ff-ba5843e3dda5

#set subscription
az account set --subscription $subscription

# Resource Group Name
resourceGroupName=CLINF-GL_Kappel

#public vNet Name
vNetName=AppGateway-vNet

#Define subnet name
subnetName=AppGateway-Subnet
appGatewaySubnetName=AppGatewayOnly-Subnet

#Define nsg name
nsgName=AppGateway-nsg

#Define availabilityset name
availabilitySetName=VMAvailabilitySet

#Define name of vm
vmNamePrefix=AvailSetVM

#Define location
location=northeurope

#Define admin name for VM
vmAdminUser=tkadmin

#Define password for admin account
vmAdminPassword=Pa55w.rdPa55w.rd

#Number of VMs for availability set
numberOfVMs=$numbOfVMs

#Define array for internal ips of VMs
internalIpArray=()
ipsAsString=""
for l in $(seq 1 $numberOfVMs)
do
    internalIpArray+=(10.0.0.1$l)
    echo 10.0.0.1$l
done

#VNet address prefix
vNetAddressPrefix=10.0.0.0/16

#Subnet address prefix
subnetAddressPrefix=10.0.0.0/24
appGatewaySubnetAddressPrefix=10.0.200.0/24

#Define name for public IP address for the loadbalancer
appGatewayPublicIpName=AppGateway-PublicIP

#Define name for loadbalancer
appGatewayName=AppGateway-TKInc

#Define loadbalancer frontend name
appGatewayFrontendName=AppGateway-Frontend

#Define loadbalancer backend name
appGatewayBackendPoolName=bepool

########## End of variable Definition ##############

########## Start with Deployment ###################

#create resource group
az group create --name $resourceGroupName --location $location

#create virtual network
az network vnet create --name $vNetName --resource-group $resourceGroupName --location $location --address-prefixes $vNetAddressPrefix --subnet-name $subnetName --subnet-prefixes $subnetAddressPrefix

#create NSG
az network nsg create --name $nsgName --resource-group $resourceGroupName --location $location

#create required inbound NSG rules for webapplications and remote access for windows VM's
az network nsg rule create --name "AllowAnyHTTPInBound" --resource-group $resourceGroupName --nsg-name $nsgName --priority 110 --destination-port-ranges 80 --access Allow --protocol Tcp --direction Inbound
az network nsg rule create --name "AllowAnyRDPInBound" --resource-group $resourceGroupName --nsg-name $nsgName --priority 100 --destination-port-ranges 3389 --access Allow --protocol Tcp --direction Inbound


#create an availability set for VM's
az vm availability-set create --name $availabilitySetName --resource-group $resourceGroupName --location $location --platform-fault-domain-count 2 --platform-update-domain-count 2


#create VM's (Win2022Datacenter, Standard_B1) within the availability set within a for loop
for COUNT in $(seq 1 $numberOfVMs)
do
    az vm create --name $vmNamePrefix-$COUNT --resource-group $resourceGroupName --location $location --availability-set $availabilitySetName --nsg $nsgName --image Win2022Datacenter --size Standard_B2s --admin-username $vmAdminUser --admin-password $vmAdminPassword --vnet-name $vNetName --subnet $subnetName --private-ip-address ${internalIpArray[$COUNT-1]} --public-ip-address ""
done

# Extend VM's with IIS Server and a simple html file to display the name of the VM
for COUNT in $(seq 1 $numberOfVMs)
do
    az vm run-command invoke -g $resourceGroupName -n $vmNamePrefix-$COUNT --command-id RunPowerShellScript --scripts "Install-WindowsFeature -name Web-Server -IncludeManagementTools"
    az vm run-command invoke -g $resourceGroupName -n $vmNamePrefix-$COUNT --command-id RunPowerShellScript --scripts "Remove-Item -Path C:\inetpub\wwwroot\iisstart.htm"
    az vm run-command invoke -g $resourceGroupName -n $vmNamePrefix-$COUNT --command-id RunPowerShellScript --script "powershell.exe Add-Content -Path C:\inetpub\wwwroot\iisstart.htm -Value \$env:Computername"
done

#calculate execution time
end=$(date +%s)
runtime=$((end-start))
echo "The execution time was $runtime seconds"


# AppGateway Config
#az network vnet subnet create --name $appGatewaySubnetName --resource-group $resourceGroupName --vnet-name $vNetName --address-prefixes $appGatewaySubnetAddressPrefix

# Public IP
#az network public-ip create --name $appGatewayPublicIpName --resource-group $resourceGroupName --location $location --allocation-method Static --sku Standard --tier Regional --version IPv4

# BE Pool creation
# az network application-gateway address-pool create --gateway-name $appGatewayName --name $appGatewayBackendPoolName --resource-group $resourceGroupName
# for COUNT in $(seq 1 $numberOfVMs)
# do
#     $ipsAsString = $ipsAsString + $internalIpArray[$COUNT-1] + " "
# done

# add servers to BE Pool
#az network application-gateway address-pool update --gateway-name $appGatewayName --name MachineIP-$COUNT --resource-group $resourceGroupName --servers $ipsAsString

# create Frontend IP
#az network application-gateway frontend-ip create --gateway-name $appGatewayName --name $appGatewayFrontendName --resource-group $resourceGroupName --public-ip-address $appGatewayPublicIpName

# create Gateway itself
#az network application-gateway create -g $resourceGroupName -n $appGatewayName --frontend-port 80 --location $location --max-capacity 3 --priority 1 --public-ip-address $appGatewayPublicIpName --sku Standard_v2 --subnet $appGatewaySubnetName --vnet-name $vNetName --http-settings-protocol Http --servers $ipsAsString